[{"path":"index.html","id":"intro","chapter":"Introduction","heading":"Introduction","text":"Welcome statistics!want, can also download book PDF EPUB file. aware print versions missing richer formatting online version. Besides, recommended way work material download R notebook file (.Rmd) top chapter work RStudio.","code":""},{"path":"index.html","id":"intro-philosophy","chapter":"Introduction","heading":"Philosophy","text":"[TODO]","code":""},{"path":"index.html","id":"intro-structure","chapter":"Introduction","heading":"Course structure","text":"[TODO]","code":""},{"path":"index.html","id":"intro-onward","chapter":"Introduction","heading":"Onward and upward","text":"hope enjoy textbook. can provide feedback two ways:preferred method file issue Github page: https://github.com/VectorPosse/Intro_Stats/issuesThe preferred method file issue Github page: https://github.com/VectorPosse/Intro_Stats/issuesAlternatively, send email: sraleigh@westminstercollege.eduAlternatively, send email: sraleigh@westminstercollege.edu","code":""},{"path":"intror.html","id":"intror","chapter":"1 Introduction to R","heading":"1 Introduction to R","text":"","code":""},{"path":"intror.html","id":"functions-introduced-in-this-chapter","chapter":"1 Introduction to R","heading":"1.0.1 Functions introduced in this chapter:","text":"<-, c, sum, mean, library, ?, ??, View, head, tail, str, NROW, NCOL, summary, $","code":""},{"path":"intror.html","id":"intror-intro","chapter":"1 Introduction to R","heading":"1.1 Introduction","text":"Welcome R! chapter walk everything need know get started using R.go chapter (future chapters), please read slowly carefully, pay attention detail. Many steps depend correct execution previous steps, reading quickly casually might come back bite later.","code":""},{"path":"intror.html","id":"intror-whatisr","chapter":"1 Introduction to R","heading":"1.2 What is R?","text":"R programming language specifically designed statistics. Don’t intimidated word “programming” though. goal course make computer programmer. use R statistics, don’t need know anything programming . Every chapter throughout whole course give examples commands need use. use example commands templates make necessary changes adapt data ’re trying analyze.greatest thing R free open source. means can download use free, also can inspect modify source code R functions. kind transparency exist commercial software. net result robust, secure, widely-used language literally tens thousands contributions R users world.R also become standard tool statistical analysis, academia industry government. Although commercial packages still widely used, many practitioners switching R due cost (free!) relative ease use. course, able list R experience résumé future employer value . might even help get job!","code":""},{"path":"intror.html","id":"intror-rstudio","chapter":"1 Introduction to R","heading":"1.3 RStudio","text":"RStudio ``Integrated Development Environment,’’ IDE short. IDE tool working programming language fancier just simple text editor. IDEs give shortcuts, menus, debugging facilities, syntax highlighting, things make life easy possible.Open RStudio can explore areas ’ll using future.left side screen, see big pane called “Console”. startup text , , see “command prompt”: symbol “>” followed blinking cursor. (cursor blinking, means focus another pane. Click anywhere Console cursor start blinking .)command prompt can one intimidating things starting use R. ’s just sitting waiting something. Unlike programs run commands menus, R requires know need type make work.’ll return Console moment.Next, look upper-right corner screen. least three tabs pane starting “Environment”, “History”, “Connections”. “Environment” (also called “Global Environment”) keeps track things define working R. ’s nothing see yet haven’t defined anything! “History” tab likewise empty; , haven’t done anything yet. won’t use “Connections” tab course. (Depending version RStudio using configuration, may see additional tabs, won’t need course.)Now look lower-right corner screen. likely five tabs : “Files”, “Plots”, “Packages”, “Help”, “Viewer”. “Files” tab eventually contain files upload create. “Plots” show result commands produce graphs charts. “Packages” explained later. “Help” precisely sounds like; useful place get know. never use “Viewer” tab, don’t worry .","code":""},{"path":"intror.html","id":"try-something-intror-trysomething","chapter":"1 Introduction to R","heading":"1.4 Try something! {intror-trysomething}","text":"let’s something R! Go back Console command prompt (“>” symbol blinking cursor), typeand hit Enter.Congratulations! just ran first command R. ’s downhill . R really nothing glorified calculator.Okay, let’s something slightly sophisticated. ’s important note R case-sensitive, means lowercase letters uppercase letters treated differently. Type following, making sure use lowercase c, hit Enter:just created “vector”. use letter c enclose list things parentheses, tell R “combine” elements. , vector just collection data. little arrow <- says take ’s right assign symbol left. vector x now saved memory. long don’t terminate current R session, vector available .Check “Environment” pane now. see vector x just created, along information . Next x, says num, means vector numerical data. says [1:5] indicates five elements vector x.command prompt Console, typeand hit Enter. Yup, x . R knows . may wondering [1] appears beginning line. see means, try typing (hit Enter—point ’m going stop reminding hit Enter everything type):R clever, alphabet built name letters.TypeNow can see [1] meant ? Assuming letters spilled onto one line Console, see number brackets beginning line telling numerical position first entry new line.Since ’ve done things, check “Global Environment” upper-right corner. see two objects ’ve defined thus far, x y. Now click “History” tab. commands run far. can handy need go back re-run earlier command, want modify earlier command ’s easier edit slightly type . get older command back Console, either double-click , select click “Console” button top pane.want re-use old command, usually long since last used . case, even handy trick. Click Console cursor blinking blank command prompt. Now hit arrow keyboard. . Now hit arrow twice. great way access recently used commands command history.Let’s something x. TypeI bet figured just happened.Now tryWhat wanted save mean five numbers use later? can assign result another variable! Type following observe effect Environment.makes difference letter combination letters use name variables. example,just saves mean differently named variable. general, variable names can combination characters letters, numbers, underscore symbols (_), dots (.). (course, prefer underscores dots.) use spaces special character names variables.1 avoid variable names words predefined R functions; example, type mean <- mean(x).","code":"\n1+1\nx <- c(1, 3, 4, 7, 9)\nx\ny <- letters\ny\nsum(x)\nmean(x)\nm <- mean(x)\nmean_x <- mean(x)"},{"path":"intror.html","id":"intror-loadpackages","chapter":"1 Introduction to R","heading":"1.5 Load packages","text":"Packages collections commands, functions, sometimes data people world write maintain. packages extend capabilities R add useful tools. example, like use palmerpenguins package includes interesting data set penguins.installed R RStudio machine instead accessing RStudio Workbench browser, ’ll need type install.packages(\"palmerpenguins\") ’ve never used palmerpenguins package . using RStudio Workbench browser, may able install packages may admin privileges. need package installed, contact person administers server.data set called penguins. Let’s see happens try access data set without loading package contains . Try typing :received error. makes sense R doesn’t know anything data set called penguins.Now—assuming palmerpenguins package installed—type command prompt:didn’t look like anything happened. However, background, stuff palmerpenguins package became available use.Let’s test claim. Hit arrow twice get back see Console (can manually re-type , ’s fun!):Now R knows penguins data, last command printed Console.Go look “Packages” tab pane lower-right corner screen. Scroll little get “P”s. able find palmerpenguins package. ’ll also notice check mark , indicating package loaded current R session.must use library command every new R session want use package.2 terminate R session, R forgets package. ever situation trying use command know ’re typing correctly, ’re still getting error, check see package containing command loaded library. (Many R commands “base R” commands, meaning come R special package required access . set letters used one example.)","code":"\npenguins\nlibrary(palmerpenguins)\npenguins"},{"path":"intror.html","id":"intror-gettinghelp","chapter":"1 Introduction to R","heading":"1.6 Getting help","text":"four important ways get help R. first obvious “Help” tab lower-right pane screen. Click tab now. search bar right, type penguins hit Enter. Take minutes read help file.Help files good authors. Fortunately, package developers conscientious enough write decent help files. don’t surprised help file doesn’t quite tell want know. highly technical R functions, sometimes help files downright inscrutable. Try looking help file grep function. Can honestly say idea command might use ? time, become knowledgeable R works, help files get less mysterious.second way getting help Console. Go Console typeThe question mark tells R need help R command letters. bring help file Help pane looking .Sometimes, don’t know exactly name command . example, suppose misremembered name thought letter instead letters. Try typing :received error command called letter. Try instead:scroll bit Help pane. Two question marks tell R picky spelling. bring whole bunch possibilities Help pane, representing R’s best guess might searching . (case, ’s easy find. ’d know help file letters appeared help page called base::Constants.)fourth way get help—often useful way—use best friend Google. don’t want just search “R”. (’s downside using single letter alphabet name programming language.) However, type “R __________” fill blank topic interest, Google usually pretty good job sending relevant pages. Within first hits, fact, ’ll often see online copy help file see R. Frequently, next hits lead StackOverflow knowledgeable people post helpful responses common questions.Use Google find take square root number R. Test newly-discovered function numbers make sure works.","code":"\n?letters\n?letter\n??letter"},{"path":"intror.html","id":"intror-understandingdata","chapter":"1 Introduction to R","heading":"1.7 Understanding the data","text":"Let’s go back penguins data contained penguins data set palmerpenguins package.first thing understand data set read help file . (’ve already done penguins data.) course, works data files come R package can loaded R. using R analyze data, presumably don’t need help file. ’re analyzing data another source, ’ll go source find data.Next, can also look data “spreadsheet” form. Type(sure ’re using upper-case “V” View.) new pane open upper-left corner screen. pane, penguins data appears grid format, like spreadsheet. observations (individual penguins) rows variables columns. also let sort column clicking arrows next variable name across top.Try print just rows data Console:can customize specifying number rows print. (Don’t forget arrow trick!)tail command something similar.’re working HTML documents like one, ’s usually necessary use View, head, tail HTML format print data frame lot neatly Console. need type following code; just look table appears.can scroll rows using numbers bottom “Next” button. thing can’t can View sort columns.want understand “structure” data. , use str command. Try :tells us several important things. First says 344 observations 8 variables. can isolate pieces information separately well, need:give number rows columns, respectively.str command also tells us variables data set. ’ll talk later.need able summarize variables data set. summary command one way :may recognize terms like “Median” “1st Qu.” “3rd Qu.” yet. Nevertheless, can see summary come handy.","code":"\nView(penguins)\nhead(penguins)\nhead(penguins, n = 10)\ntail(penguins)\npenguins## # A tibble: 344 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 2 more variables: sex <fct>, year <int>\nstr(penguins)\nNROW(penguins)\nNCOL(penguins)\nsummary(penguins)"},{"path":"intror.html","id":"intror-understandingvariables","chapter":"1 Introduction to R","heading":"1.8 Understanding the variables","text":"want look one variable time, use dollar sign grab . Try :list entire body_mass_g column, words, body masses (grams) penguins particular study. want see first , can use head like .want structure variable body_mass_g, :Notice letters int beginning line. stands “integer” another word whole number. words, patients’ ages appear data set whole numbers. data types ’ll see future:num: general numerical data (can integers well decimal parts).chr: means “character”, used character strings, can sequence letters numbers. example, researcher recorded notes penguin, notes recorded character variable.factor: categorical data, data groups observations together categories. example, species categorical. generally recorded like character strings, factor variables structure take limited number possible values corresponding generally small number categories. ’ll learn lot factor variables future chapters.data types, ones far common ’ll encounter regular basis.want summarize variable body_mass_g, can :executing commands , may noticed entries listed NA. “missing” values. worth paying attention missing values thinking carefully might missing. now, just make mental note NA code R uses data missing. (blank cell spreadsheet.)","code":"\npenguins$body_mass_g\nhead(penguins$body_mass_g)\nstr(penguins$body_mass_g)\nsummary(penguins$body_mass_g)"},{"path":"intror.html","id":"intror-projects","chapter":"1 Introduction to R","heading":"1.9 Projects","text":"Using files R requires organized. R uses ’s called “working directory” find files needs. Therefore, can’t just put files old place expect R able find .One way ensuring files located R can find organize work projects. Look far upper-right corner RStudio screen. see text says Project: (None). means currently project. ’re going create new project preparation next chapter using R Markdown.Open drop-menu select New Project. dialog box opens, select New Directory, New Project.’ll need give project name. general, descriptive name—one still remind several years project . thing remember project names file names spaces . fact, avoid kinds special characters well, like commas, number signs, etc. Stick letters numerals just fine. want multi-word project name file name, recommend using underscores. R allow name projects spaces modern operating systems set handle file names spaces, certain things either don’t work require awkward workarounds file names spaces. case, let’s type 02_Using_R_Markdown “Directory name”. Leave everything else alone click Create Project.see screen refresh R restart.see new file called 02_Using_R_Markdown.Rproj Files pane, never touch file. ’s just RStudio keep track project details.everything works way , creating new project create new folder, put folder, automatically make working directory.additional files need project placed directory. Let’s put file right now. Click link download next assignment file:[LINK GOES ]file now likely sitting kind “Downloads” folder machine, need get file working directory.installed R RStudio machine, ’ll need navigate system find downloaded file move copy project working directory. (done easily using File Explorer Windows Finder MacOS.) using RStudio Workbench web browser, ’ll need upload project folder using “Upload” button Files tab.","code":""},{"path":"intror.html","id":"intror-conclusion","chapter":"1 Introduction to R","heading":"1.10 Conclusion","text":"often said steep learning curve learning R. true extent. R harder use first types software. Nevertheless, course, work hard ease first hurdle get moving relatively quickly. Don’t get frustrated don’t give ! Learning R worth effort put . Eventually, ’ll grow appreciate power flexibility R accomplishing huge variety statistical tasks.Onward upward!","code":""}]
